"""
Django settings for MusicMain project.

Generated by 'django-admin startproject' using Django 3.2.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from datetime import timedelta
from pathlib import Path
import os



# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

LOGIN_REDIRECT_URL = 'http://127.0.0.1:8000/index' #登入後首頁


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-#=!&#+b6g-hp2pcms+@&4p$y3yj-9q9!u%&ky+)56if(+3d=&i'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'musicApp',
    'rest_framework',
    'rest_framework_simplejwt',
    'drf_yasg',
    'corsheaders', # 防止跨網域攻擊
    'drf_spectacular',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
]

ROOT_URLCONF = 'MusicMain.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'MusicMain.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases
# heroku: bosom-friend

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql',
#         'NAME': 'd68ejc1qf6f9fd',
#         'USER':'xkqyozcxsqdkhl',
#         'PASSWORD':'a7ac418ec37705cc8a2b75007a8414408e73fdee7c9a5b05f946315021a11a43',
#         'HOST':'ec2-23-23-151-191.compute-1.amazonaws.com',
#         'PORT':'5432',
#     }
# }

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': '111-moodformusic', # 111-moodformusic
        'USER':'111202',
        'PASSWORD':'@Ntub202', # @Ntub202
        'HOST':'140.131.114.242',
        'PORT':'3306',
    }
}

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.mysql',
#         'OPTIONS': {
#             'read_default_file': os.path.join(BASE_DIR, 'mydata.cnf'),
#         },
#     }
# }

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql',
#         'NAME': 'postgres',
#         'USER':'case111202@bosom-111202',
#         'PASSWORD':'Ntub-202',
#         'HOST':'bosom-111202.postgres.database.azure.com',
#         'PORT':'5432',
#     }
# }


# azure postgreSQL information
# dbname='{your_database}' 
# user='case111202@bosom-111202' 
# host='bosom-111202.postgres.database.azure.com' 
# password='{your_password}' 
# port='5432' 
# sslmode='true' 'sslmode':'true',

# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'zh-hant'

TIME_ZONE = 'Asia/Taipei'

USE_I18N = True

USE_L10N = False

DATE_FORMAT = 'Y-m-d'

DATETIME_FORMAT = 'Y-m-d'

DATE_INPUT_FORMATS = ['%Y-%m-%d']

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'

STATICFILES_DIRS = [
    BASE_DIR / 'static',
]

AUTH_USER_MODEL = 'musicApp.Acct'

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
        # 'rest_framework.authentication.TokenAuthentication',
    ),
#    'DEFAULT_PERMISSION_CLASSES': (
#         'rest_framework.permissions.IsAdminUser',
#    ),
}

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=60*8), #大多用這個，token結束之後就會被自動登出
}


CORS_ALLOWED_ORIGINS = [
    "http://localhost:8000",
    "http://localhost:3000",
]

CORS_ALLOW_All_ORIGINS = True
CORS_ALLOW_CREDENTIALS = True

# SWAGGER_SETTINGS = {
#     "exclude_namespaces": [], # List URL namespaces to ignore
#     "api_version": '0.1',  # Specify your API's version
#     "api_path": "api/",  # Specify the path to your API not a root level
#     "enabled_methods": [  # Specify which methods to enable in Swagger UI
#         'get',
#         'post',
#         'put',
#         'patch',
#         'delete'
#     ],
#     "api_key": '', # An API key
#     "is_authenticated": False,  # Set to True to enforce user authentication,
#     "is_superuser": False,  # Set to True to enforce admin only access
# }

SWAGGER_SETTINGS = {
    "SECURITY_DEFINITIONS": {
        "JWT [Bearer {JWT}]": {
            "name": "Authorization",
            "type": "apiKey",
            "in": "header",
        }
    },
    "USE_SESSION_AUTH": False,
}

FORCE_SCRIPT_NAME = "/"

# authorizations = {
#     'apikey': {
#         'type' : 'apiKey',
#         'in': 'header',
#         'name': 'Authorization'
#     }
# }